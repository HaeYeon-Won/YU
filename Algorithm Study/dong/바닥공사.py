"""
가로의 길이가 N, 세로의 길이가 2인 직사각형 형태의 얇은 바닥이 있다. 태일이는 이 얇은 바닥을
1*2 덮개, 2*1 덮개, 2*2덮개를 이용해 채우고자 한다.
이때 바닥을 채우는 모든 경우의 수를 구하는 프로그램을 작성하시오.
출력 :  나온 경우의 수를 799,796으로 나눈 나머지를 출력하시오
"""
#2칸씩 띄워야하는경우?
def solution(area):
    dP = [0 for _ in range(area+1)]
    dP[1], dP[2] = 1, 3
    for i in range(3, area+1):
        dP[i]=(dP[i-1]+dP[i-2]*2)%799796
    print(dP[area])
area=int(input())
solution(area)


"""
만약 길이가 i인 덮개가 존재한다고 치자
이때 덮개를 (i, 0~i-1), (i, 0~i-2)로 나눌수 있다. 
단, (i, 0~i-3)은 최대 사용할 수 있는 타일이 2*2 이므로 제외한다.(어차피 같기때문에)

1) (i, 0~i-1)로 나눈경우
이 경우 채울 수 있는 타일의 경우는 1*2 하나이다.

2) (i, 0~i-2)로 나눈경우
이 경우 채울 수 있는 타일의 경우는 2*2, (2*1, 2*1) 두가지 이다.
여기서 1*2타일을 사용하는 경우는 앞선 1)의 경우와 중복되므로 제외한다.

즉 i번째 타일의 갯수 ai = ai-1 + (ai-2)*2가 된다.

물론 더 많은 경우가 있겠지만 생각이 안난다...
"""
